plugins {
    id 'java'
    id 'application'
    id 'io.neow3j.gradle-plugin' version "3.14.0"
}

group 'io.neow3j'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'io.neow3j:contract:3.14.0'
    implementation 'io.neow3j:devpack:3.14.0'
    implementation 'io.neow3j:compiler:3.14.0'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1',
            'io.neow3j:devpack-test:3.14.0'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

neow3jCompiler {
    // Option 1: (easier/preferred)
    // Set the class name of the contract to compile when running the `neow3jCompiler` Gradle task.
    className = "io.neow3j.examples.contractdevelopment.contracts.TicTacToe"

    // Option 2:
    // If you want to set the contract class name as a project property,
    // and then set the 'className' attribute through the command line,
    // then you can:
    // 
    // className = System.getProperty("className")
    // 
    // Then, you can compile your code with:
    // ./gradlew -q -P className=io.neow3j.examples.contractdev.contracts.BongoCatToken neow3jCompile

    // Set neow3j compiler to generate debug symbols
    debug = true
}

// The following configuration is *not* strictly required for a neow3j
// project.
// The following configuration enables you to execute any specific
// class file that contains a main() method, directly in the command line.
// For example:
// ./gradlew -q -P mainClass=io.neow3j.examples.contractdev.CompileAndDeploy run
application {
    mainClassName = project.hasProperty("mainClass") ? getProperty("mainClass") : "null"
}

// The following task is *not* required for a neow3j project.
// This is just a task to provide a convenient way to download
// all dependencies.
task downloadDependencies(type: Exec) {
    configurations.testRuntime.files
    configurations.runtime.files
    configurations.runtimeClasspath.files
    commandLine 'echo', 'Downloaded all dependencies'
}
